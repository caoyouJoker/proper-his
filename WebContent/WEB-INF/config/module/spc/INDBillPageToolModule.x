  #
   # Title: “©ø‚’ “≥
   #
   # Description:“©ø‚’ “≥
   #
   # Copyright: JavaHis (c) 2015
   #
   # @author fux
Module.item=selectSysFeeMed;selectDispenseIN;selectDispenseOUT;selectVerifyin;selectRegress;selectOdd;selectStockQty;selectQtyCheck
  #
   #“©ø‚“©∆∑≤È—Ø
   #
   #@author                               
   #      
   #
selectSysFeeMed.Type=TSQL
selectSysFeeMed.SQL=SELECT DISTINCT(A.ORDER_CODE) AS ORDER_CODE, B.ORDER_DESC, C.SPECIFICATION, B.PY1,D.UNIT_CHN_DESC &
									  FROM IND_STOCK A, SYS_FEE B,PHA_BASE C,SYS_UNIT D  &
									  WHERE &
									  A.ORDER_CODE=B.ORDER_CODE &
									  AND A.REGION_CODE= <REGION_CODE> & 
									  AND A.ORG_CODE = <ORG_CODE> &  
									  AND A.ORDER_CODE=C.ORDER_CODE &
									  AND D.UNIT_CODE=C.STOCK_UNIT &  
									  ORDER BY B.PY1, A.ORDER_CODE                                  
selectSysFeeMed.item=ORDER_CODE  
selectSysFeeMed.ORDER_CODE=A.ORDER_CODE=<ORDER_CODE>  
selectSysFeeMed.Debug=N    

   #
   #“©ø‚»Îø‚≤È—Ø
   #
   #@author 
   #
   #
selectDispenseIN.Type=TSQL
selectDispenseIN.SQL= SELECT * FROM (SELECT WAREHOUSING_DATE AS IN_DATE,M.DISPENSE_NO AS  IND_NO,REQTYPE_CODE AS  TYPE_CODE, &
								   CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(D.INVENT_PRICE,4)  ELSE ROUND(D.INVENT_PRICE,4) END  AS VERIFYIN_PRICE, &
									 CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(D.ACTUAL_QTY,2)  ELSE ROUND(D.ACTUAL_QTY/C.DOSAGE_QTY,2)  END  AS QTY, &
									 CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY,2),2) &
									 ELSE ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY/C.DOSAGE_QTY,2),2)  END  AS VERIFYIN_AMT &	 
									 //ROUND(D.INVENT_PRICE,4) AS VERIFYIN_PRICE, &
									 //ROUND(D.ACTUAL_QTY,2) AS QTY, &
									 //ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY,2),2) AS VERIFYIN_AMT &					   
									 FROM IND_DISPENSEM M ,IND_DISPENSED D,PHA_TRANSUNIT C,PHA_BASE B  &   
									 WHERE M.DISPENSE_NO=D.DISPENSE_NO AND D.ORDER_CODE=C.ORDER_CODE &    
									 AND WAREHOUSING_DATE >=TO_DATE(<START_DATE>,'YYYYMMDDHH24MISS') &            
									 AND WAREHOUSING_DATE <=TO_DATE(<END_DATE>,'YYYYMMDDHH24MISS') & 
									 AND D.ORDER_CODE = B.ORDER_CODE &
                   AND (D.SUP_CODE !=(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM) &
                   OR (D.SUP_CODE =(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM) AND B.TYPE_CODE = '4')) &       
									 AND M.APP_ORG_CODE=<ORG_CODE> & 
									 AND M.REGION_CODE=<REGION_CODE> AND M.UPDATE_FLG = '3' AND D.ORDER_CODE=<ORDER_CODE> &
									 ORDER BY M.REQTYPE_CODE,M.DISPENSE_NO) A  UNION ALL &
									 SELECT * FROM (SELECT WAREHOUSING_DATE AS IN_DATE,M.DISPENSE_NO AS  IND_NO,REQTYPE_CODE AS  TYPE_CODE, &
									 CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(D.INVENT_PRICE,4)  ELSE ROUND(D.INVENT_PRICE,4) END  AS VERIFYIN_PRICE, &
									 CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(D.ACTUAL_QTY,2)  ELSE ROUND(D.ACTUAL_QTY/C.DOSAGE_QTY,2)  END  AS QTY, &
									 CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY,2),2) &
									 ELSE ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY/C.DOSAGE_QTY,2),2)  END  AS VERIFYIN_AMT &	 			
									 //ROUND(D.INVENT_PRICE,4) AS VERIFYIN_PRICE, &  
									 //ROUND(D.ACTUAL_QTY,2) AS QTY, &
									 //ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY,2),2) AS VERIFYIN_AMT &			  		 
									 FROM SPC_DISPENSEM M ,SPC_DISPENSED D,PHA_TRANSUNIT C,PHA_BASE B &   
									 WHERE M.DISPENSE_NO=D.DISPENSE_NO AND D.ORDER_CODE=C.ORDER_CODE &    
									 AND WAREHOUSING_DATE >=TO_DATE(<START_DATE>,'YYYYMMDDHH24MISS') &  
									 AND WAREHOUSING_DATE <=TO_DATE(<END_DATE>,'YYYYMMDDHH24MISS') & 
									 AND D.ORDER_CODE = B.ORDER_CODE  &
                   AND (D.SUP_CODE =(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM))  &
                   AND B.TYPE_CODE !='4'  &  
									 AND M.APP_ORG_CODE=<ORG_CODE> & 
									 AND M.REGION_CODE=<REGION_CODE> AND M.UPDATE_FLG = '3' AND D.ORDER_CODE=<ORDER_CODE> &
									 ORDER BY M.REQTYPE_CODE,M.DISPENSE_NO) B
selectDispenseIN.Debug=N   

   #     
   #“©ø‚≥ˆø‚≤È—Ø   
   #  
   #@author     
   #A.REGION_CODE = B.REGION_CODE 
   #
selectDispenseOUT.Type=TSQL
selectDispenseOUT.SQL= SELECT * FROM(SELECT DISPENSE_DATE AS IN_DATE,M.DISPENSE_NO AS  IND_NO,REQTYPE_CODE AS  TYPE_CODE, &
									 CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(D.INVENT_PRICE,4)  ELSE ROUND(D.INVENT_PRICE,4) END  AS VERIFYIN_PRICE, &
									 CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(D.ACTUAL_QTY,2)  ELSE ROUND(D.ACTUAL_QTY/C.DOSAGE_QTY,2)  END  AS QTY, &
									 CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY,2),2) &
									 ELSE ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY/C.DOSAGE_QTY,2),2)  END  AS VERIFYIN_AMT &	 
									 //ROUND(D.INVENT_PRICE,4) AS VERIFYIN_PRICE, &
									 //ROUND(D.ACTUAL_QTY,2) AS QTY, &              
									 //ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY,2),2) AS VERIFYIN_AMT &	  
									 FROM IND_DISPENSEM M ,IND_DISPENSED D,PHA_TRANSUNIT C,PHA_BASE B &
									 WHERE M.DISPENSE_NO=D.DISPENSE_NO AND D.ORDER_CODE=C.ORDER_CODE &           
									 AND DISPENSE_DATE >=TO_DATE(<START_DATE>,'YYYYMMDDHH24MISS') &
									 AND DISPENSE_DATE <=TO_DATE(<END_DATE>,'YYYYMMDDHH24MISS') &
									 AND D.ORDER_CODE = B.ORDER_CODE &
                   AND (D.SUP_CODE !=(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM) &
                   OR (D.SUP_CODE =(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM) AND B.TYPE_CODE = '4')) &
									 AND M.TO_ORG_CODE=<ORG_CODE> &  
									 AND M.REGION_CODE=<REGION_CODE> AND M.UPDATE_FLG <> '2' AND D.ORDER_CODE=<ORDER_CODE> &
									 ORDER BY M.REQTYPE_CODE,M.DISPENSE_NO) A UNION ALL &
									 SELECT * FROM(SELECT DISPENSE_DATE AS IN_DATE,M.DISPENSE_NO AS  IND_NO,REQTYPE_CODE AS  TYPE_CODE, &
							     CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(D.INVENT_PRICE,4)  ELSE ROUND(D.INVENT_PRICE,4) END  AS VERIFYIN_PRICE, &
									 CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(D.ACTUAL_QTY,2)  ELSE ROUND(D.ACTUAL_QTY/C.DOSAGE_QTY,2)  END  AS QTY, &
									 CASE WHEN D.UNIT_CODE=C.STOCK_UNIT THEN ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY,2),2) &
									 ELSE ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY/C.DOSAGE_QTY,2),2)  END  AS VERIFYIN_AMT &	 
									 //ROUND(D.INVENT_PRICE,4) AS VERIFYIN_PRICE, &
									 //ROUND(D.ACTUAL_QTY,2) AS QTY, &
									 //ROUND(ROUND(D.INVENT_PRICE,4)*ROUND(D.ACTUAL_QTY,2),2) AS VERIFYIN_AMT &	  
									 FROM SPC_DISPENSEM M ,SPC_DISPENSED D,PHA_TRANSUNIT C,PHA_BASE B &                
									 WHERE M.DISPENSE_NO=D.DISPENSE_NO AND D.ORDER_CODE=C.ORDER_CODE &             
									 AND DISPENSE_DATE >=TO_DATE(<START_DATE>,'YYYYMMDDHH24MISS') &
									 AND DISPENSE_DATE <=TO_DATE(<END_DATE>,'YYYYMMDDHH24MISS') &
									 AND D.ORDER_CODE = B.ORDER_CODE  &
                   AND (D.SUP_CODE =(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM))  &
                   AND B.TYPE_CODE !='4' &
									 AND M.TO_ORG_CODE=<ORG_CODE> &  
									 AND M.REGION_CODE=<REGION_CODE> AND M.UPDATE_FLG <> '2' AND D.ORDER_CODE=<ORDER_CODE> &
									 ORDER BY M.REQTYPE_CODE,M.DISPENSE_NO) B
									     
selectDispenseOUT.Debug=N

   #
   #“©ø‚—È ’≤È—Ø
   #
   #@author 
   #A.REGION_CODE = B.REGION_CODE   
   #  
selectVerifyin.Type=TSQL
selectVerifyin.SQL=SELECT * FROM (SELECT M.CHECK_DATE AS IN_DATE,M.VERIFYIN_NO AS IND_NO,'VERIFY' AS TYPE_CODE, &
									 ROUND(D.VERIFYIN_PRICE,4) AS VERIFYIN_PRICE ,ROUND(D.VERIFYIN_QTY,2) AS QTY, &   
									 //ROUND(ROUND(D.VERIFYIN_PRICE,2) *ROUND(D.VERIFYIN_QTY,2),2) AS VERIFYIN_AMT &
									 ROUND(D.INVOICE_AMT,2) AS VERIFYIN_AMT &       
									 FROM IND_VERIFYINM M ,IND_VERIFYIND D,PHA_BASE B &
									 WHERE M.VERIFYIN_NO=D.VERIFYIN_NO &
									 AND M.CHECK_DATE >=TO_DATE(<START_DATE>,'YYYYMMDDHH24MISS') &     
									 AND M.CHECK_DATE <=TO_DATE(<END_DATE>,'YYYYMMDDHH24MISS') &
									 AND D.UPDATE_FLG IN ('1','3') &
									 AND D.ORDER_CODE = B.ORDER_CODE &
                   AND (M.SUP_CODE !=(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM) &
                   OR (M.SUP_CODE =(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM) AND B.TYPE_CODE = '4')) &
									 AND M.ORG_CODE=<ORG_CODE> &
									 AND M.REGION_CODE=<REGION_CODE> AND D.ORDER_CODE=<ORDER_CODE> &
									 ORDER  BY M.VERIFYIN_NO) A UNION ALL &
									 SELECT * FROM (SELECT M.CHECK_DATE AS IN_DATE,M.VERIFYIN_NO AS IND_NO,'VERIFY' AS TYPE_CODE, &
									 ROUND(D.VERIFYIN_PRICE,4) AS VERIFYIN_PRICE ,ROUND(D.VERIFYIN_QTY,2) AS QTY, &   
									 //ROUND(ROUND(D.VERIFYIN_PRICE,2) *ROUND(D.VERIFYIN_QTY,2),2) AS VERIFYIN_AMT &
									 ROUND(D.INVOICE_AMT,2) AS VERIFYIN_AMT &       
									 FROM SPC_VERIFYINM M ,SPC_VERIFYIND D,PHA_BASE B &
									 WHERE M.VERIFYIN_NO=D.VERIFYIN_NO &
									 AND M.VERIFYIN_DATE >=TO_DATE(<START_DATE>,'YYYYMMDDHH24MISS') &  
									 AND M.VERIFYIN_DATE <=TO_DATE(<END_DATE>,'YYYYMMDDHH24MISS') &   
									 AND D.ORDER_CODE = B.ORDER_CODE &
                   AND (M.SUP_CODE =(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM)) &
                   AND B.TYPE_CODE !='4' &
									 AND D.UPDATE_FLG IN ('1','3') &
									 AND M.ORG_CODE=<ORG_CODE> &                                                 
									 AND M.REGION_CODE=<REGION_CODE> AND D.ORDER_CODE=<ORDER_CODE> &
									 ORDER  BY M.VERIFYIN_NO) B
selectVerifyin.Debug=N  

   #   
   #“©ø‚ÕÀªı≤È—Ø
   #
   #@author 
   #
   #
selectRegress.Type=TSQL
selectRegress.SQL= SELECT * FROM (SELECT M.CHECK_DATE AS IN_DATE,M.REGRESSGOODS_NO AS  IND_NO,'REGRESS' AS  TYPE_CODE, &
									 ROUND(D.VERIFYIN_PRICE,4) AS VERIFYIN_PRICE,ROUND(D.QTY,2) AS QTY, &
									 ROUND(ROUND(D.VERIFYIN_PRICE,4)*ROUND(D.QTY,2),2) AS VERIFYIN_AMT &  
									 FROM IND_REGRESSGOODSM M ,IND_REGRESSGOODSD D,PHA_BASE B &     
									 WHERE M.REGRESSGOODS_NO=D.REGRESSGOODS_NO &
									 AND M.CHECK_DATE >=TO_DATE(<START_DATE>,'YYYYMMDDHH24MISS') &
									 AND M.CHECK_DATE <=TO_DATE(<END_DATE>,'YYYYMMDDHH24MISS') &
									 AND D.ORDER_CODE = B.ORDER_CODE &
                   AND (M.SUP_CODE !=(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM) &
                   OR (M.SUP_CODE =(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM) AND B.TYPE_CODE = '4')) &
									 AND M.ORG_CODE=<ORG_CODE> &
									 AND M.REGION_CODE=<REGION_CODE> AND D.UPDATE_FLG IN ('1','3') AND D.ORDER_CODE=<ORDER_CODE> &
									 ORDER  BY M.REGRESSGOODS_NO) A  UNION ALL &
									 SELECT * FROM (SELECT M.CHECK_DATE AS IN_DATE,M.REGRESSGOODS_NO AS  IND_NO,'REGRESS' AS  TYPE_CODE, &
									 ROUND(D.VERIFYIN_PRICE,4) AS VERIFYIN_PRICE,ROUND(D.QTY,2) AS QTY, &
									 ROUND(ROUND(D.VERIFYIN_PRICE,4)*ROUND(D.QTY,2),2) AS VERIFYIN_AMT &  
									 FROM SPC_REGRESSGOODSM M ,SPC_REGRESSGOODSD D,PHA_BASE B &     
									 WHERE M.REGRESSGOODS_NO=D.REGRESSGOODS_NO &  
									 AND M.CHECK_DATE >=TO_DATE(<START_DATE>,'YYYYMMDDHH24MISS') &
									 AND M.CHECK_DATE <=TO_DATE(<END_DATE>,'YYYYMMDDHH24MISS') &
									 AND D.ORDER_CODE = B.ORDER_CODE &
                   AND (M.SUP_CODE =(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM)) &
                   AND B.TYPE_CODE !='4' &
									 AND M.ORG_CODE=<ORG_CODE> &
									 AND M.REGION_CODE=<REGION_CODE> AND D.UPDATE_FLG IN ('1','3') AND D.ORDER_CODE=<ORDER_CODE> &
									 ORDER  BY M.REGRESSGOODS_NO) B
									 
selectRegress.Debug=N

                    //SELECT A.LAST_VERIFY_PRICE
                    //FROM IND_AGENT A
                    //WHERE A.SUP_CODE = '18' AND A.ORDER_CODE = E.ORDER_CODE)
                    //AS VERIFYIN_PRICE
   #     
   #“©ø‚‘›π¿≤È—Ø(‘›π¿∫–◊∞∞Ê)
   #                            
   #@author     
   #  
   #  
selectOdd.Type=TSQL
selectOdd.SQL=SELECT TO_DATE(A.CLOSE_DATE,'YYYYMMDDHH24MISS') AS IN_DATE,A.ORDER_CODE,SUM(ROUND(A.ODD_QTY/C.DOSAGE_QTY,2)) AS QTY,'ODD' AS  TYPE_CODE, &  
                   ROUND(B.CONTRACT_PRICE,4) AS VERIFYIN_PRICE,SUM(ROUND(ROUND(B.CONTRACT_PRICE,4)*ROUND(A.ODD_QTY/C.DOSAGE_QTY,2),2)) AS VERIFYIN_AMT &
									 FROM IND_ODD A,PHA_TRANSUNIT C,IND_AGENT B &                                                                                                          
									 WHERE TO_DATE(A.CLOSE_DATE,'YYYYMMDDHH24MISS') >=TO_DATE(<START_DATE>,'YYYYMMDDHH24MISS') &                
									 AND TO_DATE(A.CLOSE_DATE,'YYYYMMDDHH24MISS') <=TO_DATE(<END_DATE>,'YYYYMMDDHH24MISS') &                     
									 AND (A.ORG_CODE=<ORG_CODE>  OR A.ORG_CODE IN ( SELECT ORG_CODE FROM IND_ORG WHERE SUP_ORG_CODE = <ORG_CODE>) ) &     
									 AND (B.SUP_CODE =(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM))  &                                                                          
									 AND A.ORDER_CODE=<ORDER_CODE> &       
									 AND A.ORDER_CODE = C.ORDER_CODE &                 
									 AND A.ORDER_CODE = B.ORDER_CODE &                              
									 GROUP BY A.CLOSE_DATE,A.ORDER_CODE,B.CONTRACT_PRICE &          
									 ORDER  BY A.CLOSE_DATE,A.ORDER_CODE                              
selectOdd.Debug=N

  
   #     
   #“©ø‚‘›π¿≤È—Ø(‘›π¿∆¨◊∞∞Ê)
   #                            
   #@author     
   #  
   #  
selectOddP.Type=TSQL
selectOddP.SQL=SELECT TO_DATE(A.CLOSE_DATE,'YYYYMMDDHH24MISS') AS IN_DATE,A.ORDER_CODE,SUM(ROUND(A.ODD_QTY,2)) AS QTY,'ODD' AS  TYPE_CODE, &   
                   ROUND(B.LAST_VERIFY_PRICE,4) AS VERIFYIN_PRICE,SUM(ROUND(ROUND(B.LAST_VERIFY_PRICE,4)*ROUND(A.ODD_QTY,2),2)) AS VERIFYIN_AMT &
									 FROM IND_ODD A,PHA_TRANSUNIT C,IND_AGENT B &                                                                                                          
									 WHERE TO_DATE(A.CLOSE_DATE,'YYYYMMDDHH24MISS') >=TO_DATE(<START_DATE>,'YYYYMMDDHH24MISS') &                
									 AND TO_DATE(A.CLOSE_DATE,'YYYYMMDDHH24MISS') <=TO_DATE(<END_DATE>,'YYYYMMDDHH24MISS') &                     
									 AND (A.ORG_CODE=<ORG_CODE>  OR A.ORG_CODE IN ( SELECT ORG_CODE FROM IND_ORG WHERE SUP_ORG_CODE = <ORG_CODE>) ) &     
									 AND (B.SUP_CODE =(SELECT MAIN_SUP_CODE FROM  IND_SYSPARM))  &                                                                          
									 AND A.ORDER_CODE=<ORDER_CODE> &         
									 AND A.ORDER_CODE = C.ORDER_CODE &                                 
									 AND A.ORDER_CODE = B.ORDER_CODE &                              
									 GROUP BY A.CLOSE_DATE,A.ORDER_CODE,B.LAST_VERIFY_PRICE &          
									 ORDER  BY A.CLOSE_DATE,A.ORDER_CODE                              
selectOddP.Debug=N


   #     
   #“©ø‚£®Œ¿∫ƒ≤ƒ)≈Ãµ„≤È—Ø(ªª≥…invent_price)
   #                            
   #@author     
   #    
   #  
selectQtyCheck.Type=TSQL
selectQtyCheck.SQL=SELECT TO_DATE(A.FROZEN_DATE,'YYYYMMDDHH24MISS') AS IN_DATE,A.ORDER_CODE,SUM(ROUND(A.MODI_QTY,2)) AS QTY,'PD' AS  TYPE_CODE, & 
                          //ROUND(A.VERIFYIN_PRICE,4) AS VERIFYIN_PRICE,SUM(ROUND(A.MODI_QTY,2)) AS QTY,SUM(ROUND(ROUND(A.VERIFYIN_PRICE,4)*ROUND(A.MODI_QTY,2),2)) AS VERIFYIN_AMT, &  
                          ROUND(A.INVENT_PRICE,4) AS VERIFYIN_PRICE,SUM(ROUND(A.MODI_QTY/C.DOSAGE_QTY*C.STOCK_QTY,2)) AS QTY,SUM(ROUND(ROUND(A.INVENT_PRICE,4)*ROUND(A.MODI_QTY/C.DOSAGE_QTY*C.STOCK_QTY,2),2)) AS VERIFYIN_AMT, &
                          ABS(SUM(ROUND(A.MODI_QTY,2))) AS ABS_QTY,ABS(SUM(ROUND(ROUND(A.VERIFYIN_PRICE,4)*ROUND(A.MODI_QTY,2),2))) AS ABS_VERIFYIN_AMT &
									 FROM IND_QTYCHECK A,PHA_TRANSUNIT C,PHA_BASE B &                                                                                                            
									 WHERE UNFREEZE_DATE>=TO_DATE(<START_DATE>,'YYYYMMDDHH24MISS') &                
									 AND UNFREEZE_DATE <=TO_DATE(<END_DATE>,'YYYYMMDDHH24MISS') &                     
									 AND A.ORG_CODE=<ORG_CODE> &     
									 AND B.TYPE_CODE ='4'  &       
									 AND A.MODI_QTY!=0 &                                                                                         
									 AND A.ORDER_CODE=<ORDER_CODE> &         
									 AND A.ORDER_CODE = C.ORDER_CODE &                                 
									 AND A.ORDER_CODE = B.ORDER_CODE &                              
                   GROUP BY A.FROZEN_DATE,A.ORDER_CODE,A.INVENT_PRICE &          
                   ORDER  BY A.FROZEN_DATE,A.ORDER_CODE,A.INVENT_PRICE                              
selectQtyCheck.Debug=N

  
   #  
   #÷∏∂®»’∆⁄≤È—Øø‚¥Ê      
   #   
   #@author            
   # //alert by wukai on 20170117
   #
selectStockQty.Type=TSQL
selectStockQty.SQL =    SELECT ROUND(SUM(A.STOCK_QTY / C.DOSAGE_QTY), 4) AS STOCK_QTY, &
						    CASE WHEN SUM(A.STOCK_QTY) > 0  &
						    	THEN  ROUND(ROUND(SUM(ROUND(A.INVENT_PRICE * A.STOCK_QTY, 7)), 2) / ROUND(SUM(A.STOCK_QTY), 2), 4)  &
						    ELSE 0.0000  &
						    END AS STOCK_PRICE ,  &
						    ROUND(SUM(ROUND(A.INVENT_PRICE * A.STOCK_QTY / C.DOSAGE_QTY, 7)), 2) AS STOCK_AMT &               
						    FROM IND_DDSTOCK A, PHA_BASE B, PHA_TRANSUNIT C  &  
						WHERE A.ORDER_CODE = <ORDER_CODE> AND A.ORG_CODE = <ORG_CODE> &
							AND TO_DATE(A.TRANDATE, 'YYYYMMDD') = TO_DATE(<TRANDATE>, 'YYYY/MM/DD') &
						    AND A.ORDER_CODE = C.ORDER_CODE  AND A.ORDER_CODE = B.ORDER_CODE  &
					        AND (A.SUP_CODE != (SELECT MAIN_SUP_CODE FROM IND_SYSPARM) &
					          		OR (A.SUP_CODE = (SELECT MAIN_SUP_CODE FROM  IND_SYSPARM) AND B.TYPE_CODE = '4'))  & 
					          //add by wukai on 20161205 ∞¥’’∫–◊∞º€∏Ò∑÷◊È
					    GROUP BY A.INVENT_PRICE &
						UNION ALL &    
						SELECT ROUND(SUM(A.STOCK_QTY / C.DOSAGE_QTY), 4) AS STOCK_QTY , &
						    CASE WHEN SUM(A.STOCK_QTY) > 0  &
						    THEN  ROUND(ROUND(SUM(ROUND(A.INVENT_PRICE * A.STOCK_QTY, 7)), 2) / ROUND(SUM(A.STOCK_QTY), 2), 4)  &
						    ELSE 0.0000  &
						    END AS STOCK_PRICE ,  &
						    ROUND(SUM(ROUND(A.INVENT_PRICE * A.STOCK_QTY / C.DOSAGE_QTY,7)),2) AS STOCK_AMT &                 
					    FROM SPC_STOCK A, PHA_BASE B, PHA_TRANSUNIT C  &  
						WHERE A.ORDER_CODE=<ORDER_CODE>  AND A.ORG_CODE = <ORG_CODE>  &   
					        AND (A.SUP_CODE = (SELECT MAIN_SUP_CODE FROM  IND_SYSPARM)) &
					        AND B.TYPE_CODE != '4' &
						    AND A.ORDER_CODE = C.ORDER_CODE  AND A.ORDER_CODE = B.ORDER_CODE &
						      //add by wukai on 20161205 ∞¥’’∫–◊∞º€∏Ò∑÷◊È
						GROUP BY A.INVENT_PRICE 
selectStockQty.Debug=N

  